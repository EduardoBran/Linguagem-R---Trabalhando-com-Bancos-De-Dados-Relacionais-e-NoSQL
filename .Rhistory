amostra4_r <- dados %>%
filter(property_type == "House") %>%
group_by(property_type) %>%
summarize(count = n(), average = mean(number_of_reviews))
names(amostra4_r) <- c("tipo_propriedade", "contagem", "media_reviews")
View(amostra4)
View(amostra4)
View(amostra4_r)
amostra4_r <- dados %>%
filter(property_type == "House") %>%
group_by(property_type) %>%
summarize(contagem = n(), media_reviews = mean(number_of_reviews))
names(amostra_r) <- c("tipo_propriedade", "contagem", "media_reviews")
amostra4_r <- dados %>%
filter(property_type == "House") %>%
group_by(property_type) %>%
summarize(contagem = n(), media_reviews = mean(number_of_reviews))
names(amostra4_r) <- c("tipo_propriedade", "contagem", "media_reviews")
View(amostra4_r)
amostra4_r <- dados %>%
group_by(property_type) %>%
summarize(contagem = n(), media_reviews = mean(number_of_reviews))
names(amostra4_r) <- c("tipo_propriedade", "contagem", "media_reviews")
View(amostra4_r)
amostra4 <- con$aggregate(
'[{ "$group":{"_id": "$property_type", "count": {"$sum":1}, "average": {"$avg":"$number_of_reviews"}} }]',
options = '{ "allowDiskUse" : true }'
)
names(amostra4) <- c("tipo_propriedade", "contagem", "media_reviews")
View(amostra4)
amostra4_r <- dados %>%
filter(property_type == "House") %>%
group_by(property_type) %>%
summarize(contagem = n(), media_reviews = mean(number_of_reviews))
names(amostra4_r) <- c("tipo_propriedade", "contagem", "media_reviews")
View(amostra4_r)
amostra4_r <- dados %>%
group_by(property_type) %>%
summarize(contagem = n(), media_reviews = mean(number_of_reviews))
names(amostra4_r) <- c("tipo_propriedade", "contagem", "media_reviews")
View(amostra4_r)
View(amostra4)
amostra4 <- con$aggregate(
'[{ "$group":{"_id": "$property_type", "count": {"$sum":1}, "average": {"$avg":"$number_of_reviews"}} }]',
options = '{ "allowDiskUse" : true }',
sort = '{ "property_type" : 1 }'
)
amostra4 <- con$aggregate(
'[{ "$group":{"_id": "$property_type", "count": {"$sum":1}, "average": {"$avg":"$number_of_reviews"}} }]',
options = '{ "allowDiskUse" : true }',
)
amostra4 <- amostra4$sort('{ "property_type" : 1 }')
names(amostra4) <- c("tipo_propriedade", "contagem", "media_reviews")
View(amostra4)
amostra4 <- con$aggregate(
'[{ "$group":{"_id": "$property_type", "count": {"$sum":1}, "average": {"$avg":"$number_of_reviews"}} }]',
options = '{ "allowDiskUse" : true }',
)
amostra4 <- amostra4$sort('{ "property_type" : 1 }')
amostra4_r <- dados %>%
group_by(property_type) %>%
summarize(contagem = n(), media_reviews = mean(number_of_reviews))
names(amostra4_r) <- c("tipo_propriedade", "contagem", "media_reviews")
View(amostra4_r)
View(amostra4)
amostra4 <- con$aggregate(
'[{ "$group":{"_id": "$property_type", "count": {"$sum":1}, "average": {"$avg":"$number_of_reviews"}} }]',
options = '{ "allowDiskUse" : true }',
)
names(amostra4) <- c("tipo_propriedade", "contagem", "media_reviews")
View(amostra4)
ggplot(aes(tipo_propriedade, contagem), data = amostra4) + geom_col()
ggplot(aes(tipo_propriedade, contagem), data = amostra4_r) + geom_col()
gc()
con <- mongo(db = "dsadb",
collection = "airbnb",
url = "mongodb://localhost",
verbose = FALSE,
options = ssl_options())
dados <- con$find()
con$count('{}')
amostra1 <- con$find(
query = '{ "property_type" : "House" }'
)
amostra1$count('{}')
View(amostra1)
amostra4 <- con$aggregate(
'[{ "$group":{"_id": "$property_type", "count": {"$sum":1}, "average": {"$avg":"$number_of_reviews"}} }]',
options = '{ "allowDiskUse" : true }',
)
amostra4_r <- dados %>%
group_by(property_type) %>%
summarize(contagem = n(), media_reviews = mean(number_of_reviews))
View(amostra4)
View(dados)
names(amostra4) <- c("tipo_propriedade", "contagem", "media_reviews")
names(amostra4_r) <- c("tipo_propriedade", "contagem", "media_reviews")
View(amostra4_r)
View(amostra4_r)
amostra4_r <- dados %>%
group_by(property_type) %>%
summarize(contagem = n(), media_reviews = sum(number_of_reviews))
names(amostra4_r) <- c("tipo_propriedade", "contagem", "media_reviews")
amostra4_r <- dados %>%
group_by(property_type) %>%
summarize(contagem = n(), number_reviews = sum(number_of_reviews), media_reviews = mean(number_of_reviews))
names(amostra4_r) <- c("tipo_propriedade", "contagem", "number_reviews", "media_reviews")
View(amostra4_r)
names(amostra4_r) <- c("tipo_de_propriedade", "total_propriedade", "nº_total_reviews", "media_reviews_propriedade")
names(amostra4_r) <- c("tipo_de_propriedade", "total_propriedade", "nº_total_reviews", "media_reviews_tota_propriedade")
View(amostra4_r)
amostra4_r <- dados %>%
group_by(property_type) %>%
summarize(contagem = n(), number_reviews = sum(number_of_reviews),
media_reviews = mean(number_of_reviews), media_price = mean(price))
names(amostra4_r) <- c("tipo_de_propriedade", "total_propriedade", "nº_total_reviews", "media_reviews_total_propriedade", "media_preço")
View(amostra4_r)
ggplot(aes(tipo_propriedade, contagem), data = amostra4) + geom_col()
ggplot(data = amostra4, aes(tipo_propriedade, contagem)) + geom_col()
ggplot(data = amostra4, aes(tipo_propriedade, contagem)) + geom_col()
ggplot(data = amostra4_r, aes(tipo_propriedade, contagem)) + geom_col()
ggplot(data = amostra4_r, aes(tipo_de_propriedade, total_propriedade)) + geom_col()
library(ggplot2)
names(amostra4_r) <- c("tipo_de_propriedade", "total_propriedade", "nº_total_reviews", "media_reviews_total_propriedade", "media_preco")
ggplot(data = amostra4_r, aes(tipo_de_propriedade, media_preco)) +
geom_col(fill = "steelblue", width = 0.5)
ggplot(data = amostra4_r, aes(tipo_de_propriedade, media_preco)) +
geom_col(fill = "steelblue", width = 0.5)
ggplot(data = amostra4_r, aes(tipo_de_propriedade, media_preco)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Média de Preço por Tipo de Propriedade",
x = "Tipo de Propriedade",
y = "Média de Preço")
ggplot(data = amostra4_r, aes(tipo_de_propriedade, media_preco)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Média de Preço por Tipo de Propriedade",
x = "Tipo de Propriedade",
y = "Média de Preço") +
theme_minimal()
ggplot(data = amostra4_r, aes(tipo_de_propriedade, media_preco)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Média de Preço por Tipo de Propriedade",
x = "Tipo de Propriedade",
y = "Média de Preço")
ggplot(data = amostra4_r, aes(tipo_de_propriedade, media_preco)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Média de Preço por Tipo de Propriedade",
x = "Tipo de Propriedade",
y = "Média de Preço") +
theme_minimal()
ggplot(data = amostra4_r, aes(tipo_de_propriedade, media_preco)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Média de Preço por Tipo de Propriedade",
x = "Tipo de Propriedade",
y = "Média de Preço") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotacionar rótulos do eixo x
amostra4_r <- dados %>%
group_by(property_type) %>%
summarize(contagem = n(), number_reviews = sum(number_of_reviews),
media_reviews = mean(number_of_reviews), media_price = mean(price), media_accommodates = mean(accommodates))
names(amostra4_r) <- c("tipo_de_propriedade", "total_propriedade", "nº_total_reviews",
"media_reviews_total_propriedade", "media_preco", "media_acomomodacao")
names(amostra4_r) <- c("tipo_de_propriedade", "total_propriedade", "nº_total_reviews",
"media_reviews_total_propriedade", "media_preco", "media_acomodacao")
ggplot(data = amostra4_r, aes(tipo_de_propriedade, media_acomodacao)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Média de Acomodações por Tipo de Propriedade",
x = "Tipo de Propriedade",
y = "Média de Preço") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotacionar rótulos do eixo x
ggplot(data = amostra4_r, aes(tipo_de_propriedade, total_propriedade)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Total de Propriedade",
x = "Tipo de Propriedade",
y = "Média de Preço") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotacionar rótulos do eixo x
View(dados)
amostra4_r2 <- dados %>%
group_by(property_type, cancellation_policy) %>%
summarize(contagem = n(),
number_reviews = sum(number_of_reviews),
media_reviews = mean(number_of_reviews),
media_price = mean(price),
media_accommodates = mean(accommodates))
View(amostra4_r2)
ggplot(data = amostra4_r2, aes(tipo_de_propriedade, total_propriedade)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Total de Propriedade",
x = "Tipo de Propriedade",
y = "Média de Preço") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotacionar rótulos do eixo x
names(amostra4_r2) <- c("tipo_de_propriedade", "cancellation_policy", "total_propriedade", "nº_total_reviews",
"media_reviews_total_propriedade", "media_preco", "media_acomodacao")
ggplot(data = amostra4_r2, aes(tipo_de_propriedade, total_propriedade)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Total de Propriedade",
x = "Tipo de Propriedade",
y = "Média de Preço") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotacionar rótulos do eixo x
ggplot(data = amostra4_r2, aes(tipo_de_propriedade, total_propriedade)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Total de Propriedade",
x = "Tipo de Propriedade",
y = "Total de Propriedades") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotacionar rótulos do eixo x
amostra4_r2 <- dados %>%
group_by(property_type, cancellation_policy) %>%
summarize(contagem = n(),
number_reviews = sum(number_of_reviews),
media_reviews = mean(number_of_reviews),
media_price = mean(price),
media_accommodates = mean(accommodates))
names(amostra4_r2) <- c("tipo_de_propriedade", "cancellation_policy", "total_propriedade", "nº_total_reviews",
"media_reviews_total_propriedade", "media_preco", "media_acomodacao")
amostra4_r2 <- dados %>%
group_by(property_type, cancellation_policy) %>%
summarize(contagem = n(),
number_reviews = sum(number_of_reviews),
media_reviews = mean(number_of_reviews),
media_price = mean(price),
media_accommodates = mean(accommodates))
names(amostra4_r2) <- c("tipo_de_propriedade", "cancellation_policy", "total_propriedade", "nº_total_reviews",
"media_reviews_total_propriedade", "media_preco", "media_acomodacao")
View(amostra4_r2)
ggplot(data = amostra4_r, aes(tipo_de_propriedade, total_propriedade)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Total de Propriedade",
x = "Tipo de Propriedade",
y = "Média de Preço") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotacionar rótulos do eixo x
ggplot(data = amostra4_r, aes(tipo_de_propriedade, media_acomodacao)) +
geom_col(fill = "steelblue", width = 0.5) +
labs(title = "Comparação de Média de Acomodações por Tipo de Propriedade",
x = "Tipo de Propriedade",
y = "Média de Preço") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotacionar rótulos do eixo x
resultado <- con$mapreduce(
map = "function(){emit(Math.floor(this.number_of_reviews), 1)}",
reduce = "function(id, counts){return Array.sum(counts)}"
)
View(resultado)
names(resultado) <- c("numero_reviews", "contagem")
View(resultado)
resultado2 <- dados %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup()
names(resultado) <- c("numero_reviews", "contagem")
View(resultado)
names(resultado2) <- c("numero_reviews", "contagem")
View(resultado2)
View(resultado)
View(resultado2)
resultado_r <- dados %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup()
names(resultado_r) <- c("numero_reviews", "contagem")
View(resultado_r)
resultado_r <- dados %>%
mutate(floor_number_of_reviews = floor(number_of_reviews))
View(resultado_r)
resultado_r <- dados %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup()
names(resultado_r) <- c("numero_reviews", "contagem")
View(resultado_r)
# Função de mapeamento
map_function <- function(data) {
floor_number_of_reviews <- floor(data$number_of_reviews)
list(key = floor_number_of_reviews, value = 1)
}
# Função de redução
reduce_function <- function(key, values) {
list(key = key, value = sum(values))
}
# Aplicar o MapReduce aos dados
mapped_data <- Map(map_function, split(dados, dados$number_of_reviews))
reduced_data <- Reduce(reduce_function, mapped_data)
# Converter o resultado em um data frame
resultado_mapreduce <- do.call(rbind, reduced_data)
resultado_mapreduce <- as.data.frame(resultado_mapreduce)
reduced_data <- Reduce(reduce_function, mapped_data)
# Função de mapeamento
map_function <- function(data) {
data %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
select(floor_number_of_reviews) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup() %>%
as.list()
}
# Função de redução
reduce_function <- function(key, values) {
data <- do.call(rbind, values)
list(numero_reviews = key, contagem = sum(data$contagem))
}
# Aplicar o MapReduce aos dados
resultado_mapreduce <- dados %>%
group_by_all() %>%
do(map_function(.)) %>%
group_by(numero_reviews) %>%
do(reduce_function(.$numero_reviews, .))
# Aplicar o MapReduce aos dados
resultado_mapreduce <- dados %>%
group_by_all() %>%
do(map_function(.)) %>%
group_by(numero_reviews) %>%
do(reduce_function(.$numero_reviews, .))
gc()
con <- mongo(db = "dsadb",
collection = "airbnb",
url = "mongodb://localhost",
verbose = FALSE,
options = ssl_options())
dados <- con$find()
names(amostra4_r) <- c("tipo_de_propriedade", "total_propriedade", "nº_total_reviews",
"media_reviews_total_propriedade", "media_preco", "media_acomodacao")
amostra4_r <- dados %>%
group_by(property_type) %>%
summarize(contagem = n(), number_reviews = sum(number_of_reviews),
media_reviews = mean(number_of_reviews), media_price = mean(price), media_accommodates = mean(accommodates))
names(amostra4_r) <- c("tipo_de_propriedade", "total_propriedade", "nº_total_reviews",
"media_reviews_total_propriedade", "media_preco", "media_acomodacao")
resultado <- con$mapreduce(
map = "function(){emit(Math.floor(this.number_of_reviews), 1)}",
reduce = "function(id, counts){return Array.sum(counts)}"
)
# Função de mapeamento
# Função de mapeamento
map_function <- function(data) {
data %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
select(floor_number_of_reviews) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup() %>%
as.data.frame() # Alterar esta linha
}
# Função de redução
reduce_function <- function(key, values) {
data <- do.call(rbind, values)
list(numero_reviews = key, contagem = sum(data$contagem))
}
# Aplicar o MapReduce aos dados
resultado_mapreduce <- dados %>%
group_by_all() %>%
do(map_function(.)) %>%
group_by(numero_reviews) %>%
do(reduce_function(.$numero_reviews, .))
# Função de mapeamento
map_function <- function(data) {
data %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
select(floor_number_of_reviews) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup() %>%
as.data.frame()
}
# Função de redução
reduce_function <- function(data, key) {
data %>%
mutate(numero_reviews = key) %>%
summarize(contagem = sum(contagem))
}
# Aplicar o MapReduce aos dados
resultado_mapreduce <- dados %>%
group_by_all() %>%
group_map(.f = map_function, .reduce = reduce_function)
# Função de mapeamento
# Função de mapeamento
map_function <- function(data) {
data %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
select(floor_number_of_reviews) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup() %>%
as.data.frame() # Alterar esta linha
}
# Função de redução
reduce_function <- function(key, values) {
data <- do.call(rbind, values)
list(numero_reviews = key, contagem = sum(data$contagem))
}
# Aplicar o MapReduce aos dados
resultado_mapreduce <- dados %>%
group_by_all() %>%
do(map_function(.)) %>%
group_by(numero_reviews) %>%
do(reduce_function(.$number_of_reviews, .))
# Aplicar o MapReduce aos dados
resultado_mapreduce <- dados %>%
group_by_all() %>%
do(map_function(.)) %>%
group_by(number_of_reviews) %>%
do(reduce_function(.$number_of_reviews, .))
# Função de mapeamento
map_function <- function(data) {
data %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
select(floor_number_of_reviews) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup()
}
# Função de redução
reduce_function <- function(data, key) {
data %>%
mutate(numero_reviews = key) %>%
summarize(contagem = sum(contagem))
}
# Aplicar o MapReduce aos dados
resultado_mapreduce <- dados %>%
group_by_all() %>%
group_map(.f = map_function, .reduce = reduce_function, .keep = TRUE)
# Função de mapeamento
map_function <- function(data, key) {
data %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
select(floor_number_of_reviews) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup()
}
# Função de redução
reduce_function <- function(data, key) {
data %>%
mutate(numero_reviews = key) %>%
summarize(contagem = sum(contagem))
}
# Aplicar o MapReduce aos dados
resultado_mapreduce <- dados %>%
group_by_all() %>%
group_map(.f = map_function, .reduce = reduce_function, .by = "numero_reviews", .keep = TRUE)
# Aplicar o MapReduce aos dados
resultado_mapreduce <- dados %>%
group_by_all() %>%
group_map(.f = map_function, .reduce = reduce_function, .by = "number_of_reviews", .keep = TRUE)
# Função de mapeamento
map_function <- function(data) {
data %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
select(floor_number_of_reviews) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup()
}
# Função de redução
reduce_function <- function(data) {
data %>%
summarize(contagem = sum(contagem))
}
# Aplicar o MapReduce aos dados
resultado_mapreduce <- dados %>%
group_by(floor_number_of_reviews) %>%
group_map(map_function, reduce_function)
# Função de mapeamento
map_function <- function(data) {
data %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup()
}
# Função de redução
reduce_function <- function(data) {
data %>%
summarize(contagem = sum(contagem))
}
# Aplicar o MapReduce aos dados
resultado_mapreduce <- dados %>%
group_by_all() %>%
do(map_function(.)) %>%
group_by(floor_number_of_reviews) %>%
do(reduce_function(.))
View(resultado_mapreduce)
# Converter o resultado em um data frame
resultado_mapreduce <- as.data.frame(resultado_mapreduce)
# Renomear as colunas
names(resultado_mapreduce) <- c("numero_reviews", "contagem")
# Visualizar o resultado
View(resultado_mapreduce)
View(resultado_r)
resultado <- con$mapreduce(
map = "function(){emit(Math.floor(this.number_of_reviews), 1)}",
reduce = "function(id, counts){return Array.sum(counts)}"
)
names(resultado) <- c("numero_reviews", "contagem")
View(resultado)
# Utilizando R (sem MapReduce)
resultado_r <- dados %>%
mutate(floor_number_of_reviews = floor(number_of_reviews)) %>%
group_by(floor_number_of_reviews) %>%
summarize(contagem = n()) %>%
ungroup()
names(resultado_r) <- c("numero_reviews", "contagem")
View(resultado_r)
